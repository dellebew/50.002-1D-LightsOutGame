/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module state_inverter_7 (
    input [15:0] state,
    input [15:0] button_pressed,
    output reg [15:0] out
  );
  
  
  
  reg [15:0] newState;
  
  always @* begin
    newState = state;
    
    case (button_pressed)
      16'h0001: begin
        newState[0+0-:1] = ~newState[0+0-:1];
        newState[1+0-:1] = ~newState[1+0-:1];
        newState[4+0-:1] = ~newState[4+0-:1];
        out = newState;
      end
      16'h0002: begin
        newState[0+0-:1] = ~newState[0+0-:1];
        newState[1+0-:1] = ~newState[1+0-:1];
        newState[2+0-:1] = ~newState[2+0-:1];
        newState[5+0-:1] = ~newState[5+0-:1];
        out = newState;
      end
      16'h0004: begin
        newState[1+0-:1] = ~newState[1+0-:1];
        newState[2+0-:1] = ~newState[2+0-:1];
        newState[3+0-:1] = ~newState[3+0-:1];
        newState[6+0-:1] = ~newState[6+0-:1];
        out = newState;
      end
      16'h0008: begin
        newState[2+0-:1] = ~newState[2+0-:1];
        newState[3+0-:1] = ~newState[3+0-:1];
        newState[7+0-:1] = ~newState[7+0-:1];
        out = newState;
      end
      16'h0010: begin
        newState[0+0-:1] = ~newState[0+0-:1];
        newState[4+0-:1] = ~newState[4+0-:1];
        newState[5+0-:1] = ~newState[5+0-:1];
        newState[8+0-:1] = ~newState[8+0-:1];
        out = newState;
      end
      16'h0020: begin
        newState[1+0-:1] = ~newState[1+0-:1];
        newState[4+0-:1] = ~newState[4+0-:1];
        newState[5+0-:1] = ~newState[5+0-:1];
        newState[6+0-:1] = ~newState[6+0-:1];
        newState[9+0-:1] = ~newState[9+0-:1];
        out = newState;
      end
      16'h0040: begin
        newState[2+0-:1] = ~newState[2+0-:1];
        newState[5+0-:1] = ~newState[5+0-:1];
        newState[6+0-:1] = ~newState[6+0-:1];
        newState[7+0-:1] = ~newState[7+0-:1];
        newState[10+0-:1] = ~newState[10+0-:1];
        out = newState;
      end
      16'h0080: begin
        newState[3+0-:1] = ~newState[3+0-:1];
        newState[6+0-:1] = ~newState[6+0-:1];
        newState[7+0-:1] = ~newState[7+0-:1];
        newState[11+0-:1] = ~newState[11+0-:1];
        out = newState;
      end
      16'h0100: begin
        newState[4+0-:1] = ~newState[4+0-:1];
        newState[8+0-:1] = ~newState[8+0-:1];
        newState[9+0-:1] = ~newState[9+0-:1];
        newState[12+0-:1] = ~newState[12+0-:1];
        out = newState;
      end
      16'h0200: begin
        newState[5+0-:1] = ~newState[5+0-:1];
        newState[8+0-:1] = ~newState[8+0-:1];
        newState[9+0-:1] = ~newState[9+0-:1];
        newState[10+0-:1] = ~newState[10+0-:1];
        newState[13+0-:1] = ~newState[13+0-:1];
        out = newState;
      end
      16'h0400: begin
        newState[6+0-:1] = ~newState[6+0-:1];
        newState[9+0-:1] = ~newState[9+0-:1];
        newState[10+0-:1] = ~newState[10+0-:1];
        newState[11+0-:1] = ~newState[11+0-:1];
        newState[14+0-:1] = ~newState[14+0-:1];
        out = newState;
      end
      16'h0800: begin
        newState[7+0-:1] = ~newState[7+0-:1];
        newState[10+0-:1] = ~newState[10+0-:1];
        newState[11+0-:1] = ~newState[11+0-:1];
        newState[15+0-:1] = ~newState[15+0-:1];
        out = newState;
      end
      16'h1000: begin
        newState[8+0-:1] = ~newState[8+0-:1];
        newState[12+0-:1] = ~newState[12+0-:1];
        newState[13+0-:1] = ~newState[13+0-:1];
        out = newState;
      end
      16'h2000: begin
        newState[9+0-:1] = ~newState[9+0-:1];
        newState[12+0-:1] = ~newState[12+0-:1];
        newState[13+0-:1] = ~newState[13+0-:1];
        newState[14+0-:1] = ~newState[14+0-:1];
        out = newState;
      end
      16'h4000: begin
        newState[10+0-:1] = ~newState[10+0-:1];
        newState[13+0-:1] = ~newState[13+0-:1];
        newState[14+0-:1] = ~newState[14+0-:1];
        newState[15+0-:1] = ~newState[15+0-:1];
        out = newState;
      end
      16'h8000: begin
        newState[11+0-:1] = ~newState[11+0-:1];
        newState[14+0-:1] = ~newState[14+0-:1];
        newState[15+0-:1] = ~newState[15+0-:1];
        out = newState;
      end
      default: begin
        out = state;
      end
    endcase
  end
endmodule
